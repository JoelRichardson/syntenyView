#!/bin/bash
#
# generateBlockFiles
#
# For every distinct pair of gff3 files, A and B, in the data directory, this script
# generates a file of synteny blocks. The block files are written to the data directory.
# Each block file's name consists of the A and B file basenames, separated by a dash ("-"),
# with a ".tsv" extension. So for example, if A and B are "mus_musculus_akrj.gff3"
# and "mus_musculus_balbcj.gff3", respectively, the block file is named
# "mus_musculus_akrj-mus_musculus_balbcj.tsv".
#

source config.sh

datadir=${DIR}/data
outdir=${DIR}/output

# get the list of gff3 files
declare -a arr=(`ls ${datadir}/*.gff3`)

#
slist="${outdir}/strainList.tsv"
echo "strain" > ${slist}

# 
lim=$((${#arr[@]} - 1))

# nested for loop, 
#   for (i = 0; i < length of list; i++)
#       for (j = i+1; j < length of list; j++)
#           generate synteny blocks for file[i] and file[j]
for i in `seq 0 ${lim}`; do
    # extract the A strain name
    a=${arr[$i]}
    afn=$(basename "${a}")
    afn="${afn%.*}"
    jstart=$(($i))
    echo "${afn}" >> "${slist}"
    if [ ${jstart} -le ${lim} ]; then
        for j in `seq ${jstart} ${lim}`; do
            # extract the B strain name
            b=${arr[$j]}
            bfn=$(basename "${b}")
            bfn="${bfn%.*}"
            # construct the block file name
            ofn="${afn}-${bfn}.tsv"
            # here we go...
            echo "python generate.py -A ${a} -B ${b} > ${outdir}/${ofn}"
            python generate.py -A ${a} -B ${b} > ${outdir}/${ofn}
        done
    fi
done    

